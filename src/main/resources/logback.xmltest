<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">
    <!-- 需要修改的 -->
    <property name="service_name" value="file"/>

    <property name="log_charset" value="UTF-8"/>
    <!-- %d{}=时间 %C=文件全类名 %t=线程标识 %-5p左对齐5格，且输出日志级别 %m输出信息 %n换行 -->
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.sss} [%C] [%t] [%-5p] %m%n"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.sss} [%C] [%t] [%-5p] %m%n"/>
    <property name="INFO_FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.sss} [%C] [%t] [%-5p] %m%n"/>
    <property name="ERROR_FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.sss} [%C] [%t] [%-5p] %m%n"/>


    <!--控制台日志输出配置-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--对输出日志进行格式化-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${log_charset}</charset>
        </encoder>
    </appender>
    <!--上述配置表名将 >=info级别的日志都输出到控制台-->

    <!--日志文件配置-->
    <!-- 不区分级别，直接放，如果量太大建议拆分，用我下面注释的 -->
    <appender name="FILE_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>${log_charset}</charset>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>./logs/${service_name}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <MaxFileSize>50MB</MaxFileSize>
        </rollingPolicy>
    </appender>

    <!--日志文件配置-->
<!--    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>ERROR</level>-->
<!--        </filter>-->
<!--        <encoder>-->
<!--            <pattern>${ERROR_FILE_LOG_PATTERN}</pattern>-->
<!--            <charset>${log_charset}</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;滚动策略&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;路径&ndash;&gt;-->
<!--            <fileNamePattern>./logs/${service_name}-ERROR-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            <maxHistory>30</maxHistory>-->
<!--            <MaxFileSize>50MB</MaxFileSize>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>ERROR</level>-->
<!--            <onMatch>DENY</onMatch>-->
<!--            <onMismatch>ACCEPT</onMismatch>-->
<!--        </filter>-->
<!--        <encoder>-->
<!--            <pattern>${INFO_FILE_LOG_PATTERN}</pattern>-->
<!--            <charset>${log_charset}</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;滚动策略&ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--            &lt;!&ndash;路径&ndash;&gt;-->
<!--            <fileNamePattern>./logs/${service_name}-INFO-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            <maxHistory>30</maxHistory>-->
<!--            <MaxFileSize>50MB</MaxFileSize>-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

    <!-- 异步输出 -->
<!--    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">-->
<!--        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;-->
<!--        <discardingThreshold>0</discardingThreshold>-->
<!--        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;-->
<!--        <queueSize>256</queueSize>-->
<!--        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;-->
<!--        <appender-ref ref="INFO_LOG"/>-->
<!--    </appender>-->

<!--    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">-->
<!--        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;-->
<!--        <discardingThreshold>0</discardingThreshold>-->
<!--        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;-->
<!--        <queueSize>256</queueSize>-->
<!--        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;-->
<!--        <appender-ref ref="ERROR_LOG"/>-->
<!--    </appender>-->

<!--    <appender name="ASYNC-FILE" class="ch.qos.logback.classic.AsyncAppender">-->
<!--        &lt;!&ndash; 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 &ndash;&gt;-->
<!--        <discardingThreshold>0</discardingThreshold>-->
<!--        &lt;!&ndash; 更改默认的队列的深度,该值会影响性能.默认值为256 &ndash;&gt;-->
<!--        <queueSize>256</queueSize>-->
<!--        &lt;!&ndash; 添加附加的appender,最多只能添加一个 &ndash;&gt;-->
<!--        <appender-ref ref="FILE_LOG"/>-->
<!--    </appender>-->

    <!--指定日志输出等级-->
    <root level="info">
        <appender-ref ref="STDOUT"/>
<!--        <appender-ref ref="ERROR_LOG"/>-->
<!--        <appender-ref ref="INFO_LOG"/>-->
        <appender-ref ref="FILE_LOG"/>
    </root>

</configuration>